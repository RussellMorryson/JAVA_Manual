
Когда вы объявляете переменную или метод как статические, они 
принадлежат классу, а не конкретному экземпляру. Это означает, 
что существует только один экземпляр статического члена, даже если 
вы создаете несколько объектов класса или не создаете ни одного. Он 
будет общим для всех объектов.
Пример:

public class Counter {
  public static int COUNT=0;
  Counter() {
    COUNT++;
  }
}

Переменная COUNT будет общей для всех объектов этого класса.
Теперь мы можем создавать объекты нашего класса Counter в main и 
получать доступ к статической переменной.

public class Counter {
    public static int COUNT=0;
    Counter() {
        COUNT++;
    }
}

public class MyClass {
    public static void main(String[ ] args) {
        Counter c1 = new Counter();
        Counter c2 = new Counter();
        System.out.println(Counter.COUNT);
    }
}

Результат равен 2, потому что переменная COUNT является статической и 
увеличивается на единицу каждый раз, когда создается новый объект 
класса Counter. В приведенном выше коде мы создали 2 объекта.
Вы также можете получить доступ к статической переменной, используя 
любой объект этого класса, например c1.COUNT.
Обычной практикой является использование верхнего регистра при 
именовании статической переменной, хотя это и не обязательно.

Та же концепция применима и к статическим методам.

public class Vehicle {
  public static void horn() {
    System.out.println("Beep");
  }
}

Теперь метод horn может быть вызван без создания объекта:

public class Vehicle {
    public static void horn() {
        System.out.println("Beep");
    }
}

public class MyClass {
    public static void main(String[ ] args) {
        Vehicle.horn();
    }
}

Другим примером статических методов являются методы класса Math, 
поэтому вы можете вызывать их без создания математического объекта.
Кроме того, основной метод всегда должен быть статическим.

FINAL
Используйте ключевое слово final, чтобы пометить переменную константой, 
чтобы ее можно было назначить только один раз.
Пример:

class MyClass {
    public static final double PI = 3.14; 
    public static void main(String[ ] args) {
        System.out.println(PI);
    }
}